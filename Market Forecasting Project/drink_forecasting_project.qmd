---
title: "Drink Forecasting Project Summary"
author: "Kristie Hermosillo"
format:
  html:
    embed-resources: true
---

## 📦 Setup

```{r}
# install.packages(c("forecast", "ggplot2", "readr", "lubridate", "dplyr")) # Uncomment if not yet installed

library(readr)
library(forecast)
library(ggplot2)
library(lubridate)
library(dplyr)
```

------------------------------------------------------------------------

## 📊 Step 1: Load & Prepare Data

```{r}
psl <- read_csv("psl_weekly.csv")
psl$Week <- as.Date(psl$Week)
ts_psl <- ts(psl$Search_Volume, start = c(2022, 1), frequency = 52)

strawberry <- read_csv("strawberry_matcha_weekly.csv")
strawberry$Week <- as.Date(strawberry$Week)
ts_strawberry <- ts(strawberry$Search_Volume, start = c(2022, 1), frequency = 52)

peppermint <- read_csv("peppermint_mocha_weekly.csv")
peppermint$Week <- as.Date(peppermint$Week)
ts_peppermint <- ts(peppermint$Search_Volume, start = c(2022, 1), frequency = 52)
```

------------------------------------------------------------------------

## 🔍 Step 2: Model Each Drink with SARIMA

### PSL

```{r}
fit_psl <- auto.arima(ts_psl, seasonal = TRUE)
fcast_psl <- forecast(fit_psl, h = 20)
autoplot(fcast_psl)
checkresiduals(fit_psl)
```

### Strawberry Matcha

```{r}
fit_straw <- auto.arima(ts_strawberry, seasonal = TRUE)
fcast_straw <- forecast(fit_straw, h = 20)
autoplot(fcast_straw)
checkresiduals(fit_straw)
```

### Peppermint Mocha

```{r}
fit_peppermint <- auto.arima(ts_peppermint, seasonal = TRUE)
fcast_peppermint <- forecast(fit_peppermint, h = 20)
autoplot(fcast_peppermint)
checkresiduals(fit_peppermint)
```

## 📈 Model Interpretation Summary

### PSL (Pumpkin Spice Latte)
- **Purpose:** Seasonal benchmark for fall drinks  
- **Model:** ARIMA(0,1,1)(1,1,0)[52]  
- **Insights:** Strong seasonality with predictable spikes in September–October. Residuals are clean (p = 0.35), meaning model fit is solid.

### Strawberry Matcha
- **Purpose:** Year-round trend assessment  
- **Model:** ARIMA(0,0,0)(1,1,0)[52] with drift  
- **Insights:** Upward trend emerging. Slightly noisier residuals (p = 0.097), but drift suggests rising popularity.

### Peppermint Mocha
- **Purpose:** Winter holiday demand tracking  
- **Model:** ARIMA(0,0,0)(1,1,0)[52]  
- **Insights:** Peaks predictably in Nov–Dec. Very clean residuals (p = 0.29), indicating model fits well.

### PSL with Exogenous Variables
- **Purpose:** Test external influence (holiday & temp)  
- **Model:** ARIMA(2,0,2)(1,0,0)[52] with regressors  
- **Insights:** Holidays have a modest negative coefficient (-2.18), temperature also slightly negative. Suggests PSL spikes aren't only due to weather or holidays—marketing may matter more.

------------------------------------------------------------------------

## 🧪 Step 3: Backtesting Example (PSL)

```{r}
train_psl <- window(ts_psl, end = c(2024, 52))
test_psl <- window(ts_psl, start = c(2025, 1))

fit_train_psl <- auto.arima(train_psl, seasonal = TRUE)
fcast_test_psl <- forecast(fit_train_psl, h = length(test_psl))
accuracy(fcast_test_psl, test_psl)
```

------------------------------------------------------------------------

## 🧩 Step 4: Holiday Variable (Optional)

```{r}
# Make sure this is included to access US holiday functions
library(timeDate)
library(lubridate)

# Create a dataframe of U.S. holidays for 2022–2025
holidays <- data.frame(
  Date = as.Date(c(
    USNewYearsDay(2022:2025),
    USIndependenceDay(2022:2025),
    USThanksgivingDay(2022:2025),
    USChristmasDay(2022:2025)
  ))
)

# Create a Week column rounded to Sunday
holidays$Week <- floor_date(holidays$Date, "week")

# One-hot encode holiday presence
holiday_df <- holidays %>%
  mutate(Holiday_Indicator = 1) %>%
  distinct(Week, .keep_all = TRUE)
```

## 🎉 Step 5: Add Exogenous Variables (Holiday & Temperature)

```{r}
# Create mock U.S. holiday dates from 2022 to 2025
library(timeDate)

holidays <- data.frame(
  Date = as.Date(c(
    timeDate::USNewYearsDay(2022:2025),
    timeDate::USIndependenceDay(2022:2025),
    timeDate::USThanksgivingDay(2022:2025),
    timeDate::USChristmasDay(2022:2025)
  ))
)

# Convert to weeks
holidays$Week <- floor_date(holidays$Date, "week")

holiday_df <- holidays %>%
  mutate(Holiday_Indicator = 1) %>%
  distinct(Week, .keep_all = TRUE)
```

```{r}
# Create mock temperature by week from 2022 to 2025
all_weeks <- data.frame(
  Week = seq(as.Date("2022-01-02"), as.Date("2025-06-01"), by = "week")
)

# Add a sinusoidal seasonal pattern
all_weeks$Avg_Temp <- 50 + 20 * sin(2 * pi * as.numeric(format(all_weeks$Week, "%j")) / 365) +
  rnorm(nrow(all_weeks), mean = 0, sd = 5)
```

```{r}
# Merge in holiday and temperature
psl <- left_join(psl, holiday_df, by = "Week")
psl$Holiday_Indicator[is.na(psl$Holiday_Indicator)] <- 0

psl <- left_join(psl, all_weeks, by = "Week")
```

```{r}
# Re-fit SARIMA model with external regressors
xreg_matrix <- as.matrix(psl[, c("Holiday_Indicator", "Avg_Temp")])
fit_psl_exog <- auto.arima(
  ts_psl,
  xreg = xreg_matrix,
  stepwise = TRUE,
  approximation = TRUE
)
summary(fit_psl_exog)
```

##Step 6
## 🔁 Merge Launch Dates

```{r}
launch_dates <- read_csv("launch_weeks.csv")

psl <- left_join(psl, launch_dates, by = "Week")
strawberry <- left_join(strawberry, launch_dates, by = "Week")
peppermint <- left_join(peppermint, launch_dates, by = "Week")
```

```{r}
xreg_psl <- as.matrix(psl[, c("Holiday_Indicator", "Avg_Temp", "Launch_PSL")])
fit_psl_launch <- auto.arima(ts_psl, xreg = xreg_psl, stepwise = TRUE, approximation = TRUE)
summary(fit_psl_launch)
```

```{r}
# Train/test split for Strawberry Matcha
train_straw <- window(ts_strawberry, end = c(2024, 52))
test_straw <- window(ts_strawberry, start = c(2025, 1))

fit_train_straw <- auto.arima(train_straw, seasonal = TRUE)
fcast_test_straw <- forecast(fit_train_straw, h = length(test_straw))

accuracy(fcast_test_straw, test_straw)

# Train/test split for Peppermint Mocha
train_peppermint <- window(ts_peppermint, end = c(2024, 52))
test_peppermint <- window(ts_peppermint, start = c(2025, 1))

fit_train_peppermint <- auto.arima(train_peppermint, seasonal = TRUE)
fcast_test_peppermint <- forecast(fit_train_peppermint, h = length(test_peppermint))

accuracy(fcast_test_peppermint, test_peppermint)

```

```{r}
# Holt-Winters for PSL
hw_psl <- HoltWinters(ts_psl)
hw_fcast <- forecast(hw_psl, h = 20)

# Plot forecast
autoplot(hw_fcast) +
  ggtitle("20-Week Holt-Winters Forecast – PSL") +
  xlab("Week") +
  ylab("Forecasted Search Volume")

# Compare fit to actual
accuracy(hw_fcast)

# Holt-Winters for Strawberry Matcha
hw_straw <- HoltWinters(ts_strawberry)
hw_fcast_straw <- forecast(hw_straw, h = 20)

# Plot forecast
autoplot(hw_fcast_straw) +
  ggtitle("20-Week Holt-Winters Forecast – Strawberry Matcha") +
  xlab("Week") +
  ylab("Forecasted Search Volume")

# Accuracy
accuracy(hw_fcast_straw)

# Holt-Winters for Peppermint Mocha
hw_peppermint <- HoltWinters(ts_peppermint)
hw_fcast_peppermint <- forecast(hw_peppermint, h = 20)

# Plot forecast
autoplot(hw_fcast_peppermint) +
  ggtitle("20-Week Holt-Winters Forecast – Peppermint Mocha") +
  xlab("Week") +
  ylab("Forecasted Search Volume")

# Accuracy
accuracy(hw_fcast_peppermint)
```
## 🔁 Holt-Winters Model Summary

We applied Holt-Winters exponential smoothing to each drink to assess how well a simpler seasonal model compares to our SARIMA results.

### 🎃 Pumpkin Spice Latte (PSL)
- RMSE: 5.79 | MAE: 4.26 | MASE: 0.75
- Residuals well-behaved (ACF1 = -0.075)
- ⚡ Nearly identical performance to SARIMA—strong seasonal pattern

### 🍓 Strawberry Matcha
- RMSE: 5.76 | MAE: 4.52 | MASE: 0.62
- Slightly noisier trend but model still holds
- ✅ Holt-Winters provides reasonable short-term forecasts

### 🍬 Peppermint Mocha
- RMSE: 6.40 | MAE: 4.68 | MASE: 0.82
- Residuals less stable (ACF1 = 0.06)
- ⚠️ SARIMA likely remains the better fit for capturing sharper holiday spikes

### 💡 Conclusion:
Holt-Winters is a solid fallback option and performs especially well with strongly seasonal drinks like PSL. For drinks with trend or volatility (like Strawberry Matcha or Peppermint Mocha), SARIMA offers better control and precision.


## ✅ Recommendations

- **PSL:** Strong fall-limited drink with highly predictable spikes in September–October. Both SARIMA and Holt-Winters models confirm a clear seasonal pattern.  
  → Recommend targeted promotions starting late August; low risk, high consistency.

- **Strawberry Matcha:** Demonstrates upward momentum and less seasonality. Forecasts suggest year-round potential despite some variability.  
  → Recommend expanding availability beyond spring; promote as a refreshing alternative to coffee.

- **Peppermint Mocha:** Highly seasonal and sharp-peaking around early November. SARIMA fits better than Holt-Winters due to sudden demand spike.  
  → Recommend aligning release strictly with holiday marketing—early November through December. Limited window = high impact.

- **General Insight:** SARIMA provides more precise forecasting for sharp seasonal patterns, while Holt-Winters is a solid, lightweight alternative for drinks with smoother seasonality.



## 🚧 To-Do / Remaining Steps
- [x] Format and clean Google Trends data for all drinks  
- [x] Build baseline SARIMA models for PSL, Strawberry Matcha, and Peppermint Mocha  
- [x] Backtest PSL using train/test split  
- [x] Generate forecast visualizations and residual diagnostics  
- [x] Add holiday calendar and temperature data to PSL  
- [x] Apply exogenous regressors to Strawberry and Peppermint (optional)
- [x] Add drink launch dates (manual or estimated)  
- [x] Run Holt-Winters comparison (for at least PSL)  
- [ ] Finalize executive summary and Canva slides  
- [ ] Prep speaker notes for 10–12 minute team presentation  

